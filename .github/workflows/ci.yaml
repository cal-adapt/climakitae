# Workflow file for continuous integration 
# Conda environment is caches to avoid long wait times for CI 
# Based on code from: https://github.com/epassaro/cache-conda-envs/blob/main/.github/workflows/ci.yml
# Based on code from: https://github.com/marketplace/actions/setup-miniconda

name: ci

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/climakitae-tests

          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/climakitae-tests

          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\climakitae-tests

    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Cache conda
      uses: actions/cache@v2
      env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 1
      with:
        path: ${{ matrix.prefix }}
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('etc/environment.yml') }}
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          auto-activate-base: false
          activate-environment: climakitae-tests
          environment-file: environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Output conda info 
      run: conda info
    - name: Install boltons
      run: pip install boltons==21.0.0 --no-deps
    - name: Install xclim
      run: pip install xclim==0.41.0 --no-deps
    - name: Install climakitae 
      run: pip install .
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest --no-header -vv
      if: always() # Run even if previous step fails
